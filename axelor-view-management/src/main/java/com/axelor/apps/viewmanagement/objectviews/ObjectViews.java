//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.10.31 at 06:37:00 PM ALMT 
//


package com.axelor.apps.viewmanagement.objectviews;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice maxOccurs="unbounded"&gt;
 *         &lt;element name="form" type="{http://axelor.com/xml/ns/object-views}FormView"/&gt;
 *         &lt;element name="grid" type="{http://axelor.com/xml/ns/object-views}GridView"/&gt;
 *         &lt;element name="tree" type="{http://axelor.com/xml/ns/object-views}TreeView"/&gt;
 *         &lt;element name="calendar" type="{http://axelor.com/xml/ns/object-views}CalendarView"/&gt;
 *         &lt;element name="gantt" type="{http://axelor.com/xml/ns/object-views}GanttView"/&gt;
 *         &lt;element name="cards" type="{http://axelor.com/xml/ns/object-views}CardsView"/&gt;
 *         &lt;element name="kanban" type="{http://axelor.com/xml/ns/object-views}KanbanView"/&gt;
 *         &lt;element name="chart" type="{http://axelor.com/xml/ns/object-views}ChartView"/&gt;
 *         &lt;element name="dashboard" type="{http://axelor.com/xml/ns/object-views}Dashboard"/&gt;
 *         &lt;element name="custom" type="{http://axelor.com/xml/ns/object-views}CustomView"/&gt;
 *         &lt;element name="search" type="{http://axelor.com/xml/ns/object-views}Search"/&gt;
 *         &lt;element name="search-filters" type="{http://axelor.com/xml/ns/object-views}SearchFilters"/&gt;
 *         &lt;element name="menuitem" type="{http://axelor.com/xml/ns/object-views}MenuItem"/&gt;
 *         &lt;element name="selection" type="{http://axelor.com/xml/ns/object-views}Selection"/&gt;
 *         &lt;element name="action-menu" type="{http://axelor.com/xml/ns/object-views}ActionMenuItem"/&gt;
 *         &lt;element name="action-validate" type="{http://axelor.com/xml/ns/object-views}ActionValidate"/&gt;
 *         &lt;element name="action-condition" type="{http://axelor.com/xml/ns/object-views}ActionCondition"/&gt;
 *         &lt;element name="action-record" type="{http://axelor.com/xml/ns/object-views}ActionRecord"/&gt;
 *         &lt;element name="action-attrs" type="{http://axelor.com/xml/ns/object-views}ActionAttrs"/&gt;
 *         &lt;element name="action-method" type="{http://axelor.com/xml/ns/object-views}ActionMethod"/&gt;
 *         &lt;element name="action-view" type="{http://axelor.com/xml/ns/object-views}ActionView"/&gt;
 *         &lt;element name="action-script" type="{http://axelor.com/xml/ns/object-views}ActionScript"/&gt;
 *         &lt;element name="action-ws" type="{http://axelor.com/xml/ns/object-views}ActionWS"/&gt;
 *         &lt;element name="action-import" type="{http://axelor.com/xml/ns/object-views}ActionImport"/&gt;
 *         &lt;element name="action-export" type="{http://axelor.com/xml/ns/object-views}ActionExport"/&gt;
 *         &lt;element name="action-group" type="{http://axelor.com/xml/ns/object-views}ActionGroup"/&gt;
 *         &lt;element name="action-report" type="{http://axelor.com/xml/ns/object-views}ActionReport"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "formOrGridOrTree"
})
@XmlRootElement(name = "object-views")
public class ObjectViews {

    @XmlElements({
        @XmlElement(name = "form", type = FormView.class),
        @XmlElement(name = "grid", type = GridView.class),
        @XmlElement(name = "tree", type = TreeView.class),
        @XmlElement(name = "calendar", type = CalendarView.class),
        @XmlElement(name = "gantt", type = GanttView.class),
        @XmlElement(name = "cards", type = CardsView.class),
        @XmlElement(name = "kanban", type = KanbanView.class),
        @XmlElement(name = "chart", type = ChartView.class),
        @XmlElement(name = "dashboard", type = Dashboard.class),
        @XmlElement(name = "custom", type = CustomView.class),
        @XmlElement(name = "search", type = Search.class),
        @XmlElement(name = "search-filters", type = SearchFilters.class),
        @XmlElement(name = "menuitem", type = MenuItem.class),
        @XmlElement(name = "selection", type = Selection.class),
        @XmlElement(name = "action-menu", type = ActionMenuItem.class),
        @XmlElement(name = "action-validate", type = ActionValidate.class),
        @XmlElement(name = "action-condition", type = ActionCondition.class),
        @XmlElement(name = "action-record", type = ActionRecord.class),
        @XmlElement(name = "action-attrs", type = ActionAttrs.class),
        @XmlElement(name = "action-method", type = ActionMethod.class),
        @XmlElement(name = "action-view", type = ActionView.class),
        @XmlElement(name = "action-script", type = ActionScript.class),
        @XmlElement(name = "action-ws", type = ActionWS.class),
        @XmlElement(name = "action-import", type = ActionImport.class),
        @XmlElement(name = "action-export", type = ActionExport.class),
        @XmlElement(name = "action-group", type = ActionGroup.class),
        @XmlElement(name = "action-report", type = ActionReport.class)
    })
    protected List<Object> formOrGridOrTree;

    /**
     * Gets the value of the formOrGridOrTree property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the formOrGridOrTree property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFormOrGridOrTree().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FormView }
     * {@link GridView }
     * {@link TreeView }
     * {@link CalendarView }
     * {@link GanttView }
     * {@link CardsView }
     * {@link KanbanView }
     * {@link ChartView }
     * {@link Dashboard }
     * {@link CustomView }
     * {@link Search }
     * {@link SearchFilters }
     * {@link MenuItem }
     * {@link Selection }
     * {@link ActionMenuItem }
     * {@link ActionValidate }
     * {@link ActionCondition }
     * {@link ActionRecord }
     * {@link ActionAttrs }
     * {@link ActionMethod }
     * {@link ActionView }
     * {@link ActionScript }
     * {@link ActionWS }
     * {@link ActionImport }
     * {@link ActionExport }
     * {@link ActionGroup }
     * {@link ActionReport }
     * 
     * 
     */
    public List<Object> getFormOrGridOrTree() {
        if (formOrGridOrTree == null) {
            formOrGridOrTree = new ArrayList<Object>();
        }
        return this.formOrGridOrTree;
    }

}
